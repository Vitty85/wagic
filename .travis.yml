language: cpp
dist: trusty
branches:
  except:
    - latest-master

before_install:
  - export BUILD_PSP=YES
  - export BUILD_ANDROID=YES
  - export BUILD_Qt=YES
  - export BUILD_MAC=NO
# Only building on Mac when not handling pull request
# - if [ "$TRAVIS_PULL_REQUEST" ==  "false" ]; then
#     export BUILD_MAC=YES;
#   fi
  - sudo apt-get update -qq
# Building for PSP here
  - if [ "$BUILD_PSP" == "YES" ]; then
      export PSPDEV="$TRAVIS_BUILD_DIR/opt/pspsdk" &&
      export PSPSDK="$PSPDEV/psp/sdk" &&
      export PATH="$PATH:$PSPDEV/bin:$PSPSDK/bin" &&
      wget -O sdk.lzma http://downloads.sourceforge.net/project/minpspw/SDK%20%2B%20devpak/pspsdk%200.11.2/minpspw_0.11.2-amd64.tar.lzma;
    fi
# Building for Qt here
  - if [ "$BUILD_Qt" == "YES" ]; then
      sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu trusty universe" &&
      sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu trusty main" &&
      sudo apt-get -qq update &&
      sudo apt-get -qq install qt5-qmake qtbase5-dev qtdeclarative5-dev qttools5-dev qtmultimedia5-dev pulseaudio libpulse-dev &&
      export QMAKE="qmake -qt=qt5";
    fi
# Building for Android here
  - if [ "$BUILD_ANDROID" == "YES" ]; then
      export ANDROID="android-sdk-linux/tools/android" &&
      if [ `uname -m` = x86_64 ]; then 
        sudo dpkg --add-architecture i386 && sudo apt-get update &&
        sudo apt-get install -qq --force-yes libgd2-xpm-dev libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 jq ant; fi &&
      wget http://dl.google.com/android/ndk/android-ndk-r9-linux-x86_64.tar.bz2 -nv &&
      wget http://dl.google.com/android/android-sdk_r24.3.4-linux.tgz -nv;
    fi
    
install:
- if [ "$BUILD_PSP" == "YES" ]; then
    tar -x --xz -f sdk.lzma;
  fi
- if [ "$BUILD_ANDROID" == "YES" ]; then
    tar --absolute-names -jxf android-ndk-r9-linux-x86_64.tar.bz2 &&
    tar -zxf android-sdk_r24.3.4-linux.tgz &&
    $ANDROID list sdk --extended -a &&
    echo yes | $ANDROID update sdk -a -t tools,platform-tools,build-tools-23.0.1,android-23 --no-ui --force --no-https;
  fi
- sudo python -m easy_install --upgrade pyOpenSSL
- sudo pip install pyjavaproperties
- sudo pip install github3.py
- sudo pip install cpp-coveralls

env:
  global:
  #- secure: "fdDgEQfXT5cmSPou2h5QD1Ugt87M1h3Fu2rRSmFz04OtfxFIuPvkB+bqxnzT96u+Nuk9EaWKsBCYA13DwE48++lpTVYzmnT70ItATTs1Cclka+03evo5lypE9j+QsFqIjWQxSpwqsM3cqlzxuMleOnWX1XfEuZM3qM1Y45+Kp4w6/bQTIlazEC0ax6WC3ksRmh+7sZRH+X4+xCuyOJ3vMmOmohZJ7ryu6a90AXvmAVqMjv+Tc6YAHxaVSuG5ZrTnzMVGXN4tCHiQbTzgiYVcTUv5HyhD/huP9I3lsN84QdgAHEa9XMXQPoknjvjn5EwdYP/X/72b0RBG62ifF0FlJ/2+A3uZJM+5SQjh3jhKDxxgJySmzNYFnerhUKTgvu6EFTPi5tzJkDVqW2ncbVB5mRice1SA0mqIR9a3Ku+wQxwq276kub9a7aBoaTc26Aon26amgpMO7SHMmCiazRg2SFTCk1eh0kAV12EpgLQLgoa22RtGQYsHiTzG//ytOQTNSguwt1j6a5+/Z3RYoUH3AudhYWOjbM8Gd2PV8CIT4pn/PjDwssc4f1oekuQhh7ua74p4wl/AoCNk0dy01OFfjZKRFdEKlnjlfKnU2u6pNfKwCDQKeQdYbe34fXLR6sHeYHfePTm/OBAZUvDeNyYre8P75vg24jYcZO3Dx2pL3x8="
  #- secure: "QN1IThRHZOPjkGISnhVxOYiRM53Y2Obw8X9yI3hLiSpV//ys/3YB/bmE1xWSHETDGsBz7GMHEzH8OR0L+BbmkFZe1sNjbFM1Zt1wcjgDjqFXgIAZmeD9T5ttAcAZo9DFt1zBJcNtfvR2dQgfo8YQGuGZnPmzJ2VPQCVZHVF+clkTI8xKSFwnRoWkaaROMWokFi0dbAba+4fI/A+eC0uT5z0Ac9aim6jkdUr1Je3rIIem+2vo3a59Jwjrk3mBZSUdavFpuUPge5nrel6T2lNQh8Z+HWWsqprFv40ny0ANYP7djOvnA0GkbfJTiAdefpnGf0hMfEkPf9HJCAdtLlcpnuj2BHUL+T9sSgGx5+cODBbstKQx7K03i1yxW0VHV6fqTi30RHN8AxgvuGf3PZlYrUxPYtkaQTYlYk4yF62gMSRH2gnTu2FJgoKJ+X0pLjNTp/nVIshzdZsXpah0YS+IwV9Z2Y/lz28IKCI5yZVFQtu6XDwg1VahJfMtHTSg+yRKi7XvaR4QXROis9cZt7FfgkfmFthFOjXZs5ITmG1vO14GmVZxHtZpiwt4Px0QWZBEGUpUYx5Q/Z1iHo+F8jLnHE+Wlj+beUGtC6sBIfX0Ur7WBrwQc1Vc8E8VuTVhbxmm2jKQAa9soxSp6C3taEjM6bqVTcdiScJsrcyUMg1ALFk="
  #- secure: "aYDODPuC0/pEowJbp/sQwQhkkJ/5Ky2VehtFXs59uSdRruqpNvYUOtj7+iT6M+1wFgjGV78+UY6HdP/+Cf5imp9nR5BXZHStJSG5MEY5ojuQeErCEenojroBfaNJ0R0Zsq5OkHQYDsc/bzlqNOB3sk2axlxALh7Cew8tc9y7nPMnv7Mfx3tKc+q0JfN3PPdX+8CpX/qqvZNoAmPOkLkFV1BalK0GENSzkwgufi7mIF0pseuTTDclPayRTwGsxIzDS6sG7g4J1WKUu9KL55/ICHwR7rFORiNTTicTsq7LhKf7v4emMV9V/StTLbwJKch63R4UwlfLabs05Sfp9NjXownIY6U29uoLbJWwoIcymDh9+oDeeunuY85dU9qF8hT3OqkFD6IbyQhUKOsCkT594OXbhhSLLZJA66emUzlN7vsA7kzhyP1UmmaDe0aRtEjK4LXmsc6LFaF7SJzkUis0dK/uGQ1Qt/i4abCiZ2D+7j7Xz7GYxwOlyEgv10F2B/6YSzMkKMlt0S6wfGzSSFXxV6YsQkH9rfzP2vwFb6SKTjyjsx0Cz6Rul9U/Af7XV3ci8W0l5Lmd3Qr+FbyDSjpL0llVKIOpdSRUXAg+tUVrHXrk6mUK/zDGZbODGR+v5dzvqjoV7uUWQUdehpjVps3xK0Iv2eOkSPXmPz+Z7ntPu6k="

script: "tools/travis-script.sh"

after_success:
- coveralls -b . -e JGE/src -e JGE/include -i projects/mtg/include -i projects/mtg/src --gcov-options '\-lp'
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l core.zip -r Wagic-core.zip -b $TRAVIS_BRANCH
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l projects/mtg/Android/bin/Wagic-debug.apk -r Wagic-android.apk -b $TRAVIS_BRANCH
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l projects/mtg/psprelease.zip -r Wagic-psp.zip -b $TRAVIS_BRANCH
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l qt-gui-build/linuxqtrelease.zip -r Wagic-linux-QT.zip -b $TRAVIS_BRANCH
