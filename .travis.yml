language: cpp
dist: trusty
branches:
  except:
    - latest-master

before_install:
  - export BUILD_PSP=YES
  - export BUILD_ANDROID=YES
  - export BUILD_Qt=YES
  - export BUILD_MAC=NO
# Only building on Mac when not handling pull request
# - if [ "$TRAVIS_PULL_REQUEST" ==  "false" ]; then
#     export BUILD_MAC=YES;
#   fi
  - sudo apt-get update -qq
# Building for PSP here
  - if [ "$BUILD_PSP" == "YES" ]; then
      export PSPDEV="$TRAVIS_BUILD_DIR/opt/pspsdk" &&
      export PSPSDK="$PSPDEV/psp/sdk" &&
      export PATH="$PATH:$PSPDEV/bin:$PSPSDK/bin" &&
      wget -O sdk.lzma http://downloads.sourceforge.net/project/minpspw/SDK%20%2B%20devpak/pspsdk%200.11.2/minpspw_0.11.2-amd64.tar.lzma;
    fi
# Building for Qt here
  - if [ "$BUILD_Qt" == "YES" ]; then
      sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu trusty universe" &&
      sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu trusty main" &&
      sudo apt-get -qq update &&
      sudo apt-get -qq install qt5-qmake qtbase5-dev qtdeclarative5-dev qttools5-dev qtmultimedia5-dev pulseaudio libpulse-dev &&
      export QMAKE="qmake -qt=qt5";
    fi
# Building for Android here
  - if [ "$BUILD_ANDROID" == "YES" ]; then
      export ANDROID="android-sdk-linux/tools/android" &&
      if [ `uname -m` = x86_64 ]; then 
        sudo dpkg --add-architecture i386 && sudo apt-get update &&
        sudo apt-get install -qq --force-yes libgd2-xpm-dev libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 jq ant; fi &&
      wget http://dl.google.com/android/ndk/android-ndk-r9-linux-x86_64.tar.bz2 -nv &&
      wget http://dl.google.com/android/android-sdk_r24.3.4-linux.tgz -nv;
    fi
    
install:
- if [ "$BUILD_PSP" == "YES" ]; then
    tar -x --xz -f sdk.lzma;
  fi
- if [ "$BUILD_ANDROID" == "YES" ]; then
    tar --absolute-names -jxf android-ndk-r9-linux-x86_64.tar.bz2 &&
    tar -zxf android-sdk_r24.3.4-linux.tgz &&
    $ANDROID list sdk --extended -a &&
    echo yes | $ANDROID update sdk -a -t tools,platform-tools,build-tools-23.0.1,android-23 --no-ui --force --no-https;
  fi
- sudo python -m easy_install --upgrade pyOpenSSL
- sudo pip install pyjavaproperties
- sudo pip install github3.py
- sudo pip install cpp-coveralls

env:
  global:
  - secure: "Rjvu/mzFW7x1t5uvHVWS4rCB5MHuTqIYQutMpfK6MEHeCYTq9g34oWrpSBywyscLeVqRhCCMynNrbLHUBGT83bfjncP8oi5Ks+TMVJgsCKwSMHoh1Np4rWMSzTBfmMpDgqvqae1UguE+nQkxLwuYflfND3ms/9d6rxOM1bnbg33e4m6mxW/eJcr2EnDyxt9/g0OL8MDRcS7jjVQfSmGJ4nrj5OaEILHyRRsREx9biJ8BS0WKm/JJEn0P3G0BrnlV2NyK4rfggqz35nUs+k9EX9KpmTt1EQmXIHyxV5L/OuUG72qqC5XJZxqfKC4VZGtMW0PaJQKmol89JZTK3nRvwBnIIRL472rOk0osAAow5z3cDbkprydkT3SiQy1snJde7YPniwZnjLNjyDRdxTkdh1kRV5bVh8O3YUssnkgNtjk97hQiw+Dy31RPKEV6Lwp30CCMHoPDSMfpOqKATWoem725CxCNyUtozo/uTXzFJtwaBGi2PbXVms5kLLciahiC6ysy9Y2Kbuo04FpQ38UiGcJRRslNP8WqRceaklEO82cIZb4ZA4QzvkE37orSWUGhEAwwiULg7lHUDFwE3VBd11U6wCeiLBvMqSAb+hC6Ley70WFRHglP4BfEYsDV/SukhaMqIjbGRrvDUdewhzrenriutZeehGLCCLr/XpKIF6s="
  - secure: "T+xINrgLQ7t14T7Vi78MqzJ585+JRQnyZdPxJJ0q4FYf8kyqtzviSuCcEqE/GvXwmqNbukuMIi7mD9TctgXVWC0wzGl39fCP0Dz13nnTuv4IIL7sd7pWtOmDYTrFKqcFO4OzD0MgU8TB2qt1QsVgvRIktN8qsV1f3y30EAWQBe/rsim/iinRXjCePW0AqC3aTNtza0XBEYuqLdiyeHUdpjBbWUSMgOy0ZtfoVuitmp9ha4zkuhZQDi1Ha1kpDeux73lGaJ4bRtmxEKomKdN3zozp1tpFV/mC8/gl705lHvTlHmuzWreA8LZ+WGDubZ1sIYzXgjOqPutksUpmJBA5WBdoUldfXh6LjCfDGFHFUcg2GS3mCxC2URqFg3rwkKHREkjlwx02Hq6HG4HiGcsZnt4VnhydORYlW2Oo5I8rtyAmtSUIi6HhB2ITwpT3gHrZJZz8BTgAtKoGfY1qijZBxX5AzybEbpfCiv4TX94AnfoO9qJ6HuaLz8EHXzbVRzCB7q/z3my2JZ9QPcEuqteYPbU45hgJXHxq2/XRQBR9nuRI5PLNjY4EubUe2rpdnURWU0bEwKQNH9LeRrWFes1r66Tdod3C9Z7KsjUdFS6aEQrrNrnWBuQR/DaTKF6vpOFE62zjsT7/Pn0TGJyebIlpZrL4/s6g2yOkRl6muP3MkhI="
  - secure: "OcLZqgriWJZYZ3Ouze5nD89WF7B10aC1npGn1Zv9DvQryRonGG1K/WSSKd2//i/ucX1zvyoz7PVlxGxCBLYkVBmmUwaU7q5joMmdulEPnb+Mjnv6pOY4Fq8YtHgLAl+oX359DEMwSENTU98vj0qXw5+QVLZ829ggcxJgS3mnvRU1x/WHvJnR+HuQz3eYR5O/4p+t0QsIeyoLWz0b7NrdsUTbfbLcTaWcHu9qIHoGKTPX7xpHdAErZul+myTl5wsCFLHsrmQAc2s9zo4GXjsd0DwVwFjPAoKjjz0kL1+RltEUm3l27VBSb4uOnqlLs5xqHKK0OVwW3EeakG5JOD/+qbtqiZ2Mf52Jra+ty/i90JHAEK7Ky7q2O4AYCuWEE6+gWbwxIDzVtGPLKSXXdICsXl8dDf9ArS/OXKmV6oHxiMfGIBFYCfC39xV1GOtSUBgGiIb+ZGk0s1onjNwmageACBGXttPX5MlSEk5vHaTF0NqRCx4EH7L99BcQbBw98mdE+U6KpEt+1doqf8puQmhgV/TBkNC7JJsh+IRhvw2QG9EOflTteoehykJQPLIdzkkHTXOzd8LsAg60Oj6o/7MHOLRph+SYXII50QZD0cFniAF86FhP1xaPp0D/zn8bCnb4+r4FiwgzwPC1xLHS4nASkoZbpRmo2etderzZh8JjaH4="

script: "tools/travis-script.sh"

after_success:
- coveralls -b . -e JGE/src -e JGE/include -i projects/mtg/include -i projects/mtg/src --gcov-options '\-lp'
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l core.zip -r Wagic-core.zip -b $TRAVIS_BRANCH
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l projects/mtg/Android/bin/Wagic-debug.apk -r Wagic-android.apk -b $TRAVIS_BRANCH
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l projects/mtg/psprelease.zip -r Wagic-psp.zip -b $TRAVIS_BRANCH
- python tools/upload-binaries.py -t $GH_TOKEN -s $TRAVIS_COMMIT -l qt-gui-build/linuxqtrelease.zip -r Wagic-linux-QT.zip -b $TRAVIS_BRANCH
